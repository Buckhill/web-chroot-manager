{"name":"Web Chroot Manager","tagline":"Web Chroot Manager (WCM) - chroot made easy.  It's a small, easy to use application with a built in wizard","body":"Web Chroot Manager (WCM) \r\n==================\r\n\r\nWeb Chroot Manager (WCM) aims to simplify the management of chroot in Linux.  It's a small easy to use application with a built in wizard which creates chroot environments suitable for PHP-FPM.\r\n\r\nWCM supports adding additional binaries to chroot, updating of chroot with new packages, and generating and comparing blueprints of files contained inside the chroot.\r\n\r\n### Limitations\r\n\r\nWCM has been designed for Ubuntu 12.04+ LTS.  Debian and CentOS/Redhat support are due with the next release.\r\n\r\n### Installation\r\n\r\nCopy the configuration files to: /etc/buckhill-wcm/* and the shell file to your preferred location.\r\n\r\nBy default, WCM assumes that the configuration directory is located at /etc/buckhill-wcm.\r\n\r\nYou may change the CFGDIR variable in order to move the configuration directory.\r\n\r\n### WCM Workflow\r\n\r\n\t1. Use wizard to generate primary and secondary user(s) configuration\r\n\t2. Use wizard to generate site(s) configuration\r\n\t3. Or, edit template file(s) manually\r\n\t4. Create user account(s) and site(s) using create command\r\n\t5. After site is completely deployed, generate blueprints as required \r\n\r\n### How to use WCM\r\n\r\nNote: Starting WCM without any arguments specified will print help text detailing a list of roles and available options.\r\n\r\nWCM has several roles and commands:-\r\n\r\n\t1. Wizard\r\n\t2. Create\r\n\t3. Install Extra Binaries\r\n\t4. Update Binaries\r\n\t5. Binary Blueprint Manager\r\n\r\n### 1. Wizard Overview\r\n\r\nThe wizard is used to generate configuration files which are later used when creating chroot accounts and sites.\r\n\r\nThere are three sections:\r\n\r\n\t- Primary account\r\n\t- Secondary account\r\n\t- Site\r\n\r\nTo run, type: ./web-chroot-manager.sh wizard\r\n\r\n### 1.1 Wizard - Primary Account\r\n\r\nThe primary account is the account under which the chroot is installed. Its UID and GID are used by PHP-FPM.\r\n\r\nThe wizard asks for:\r\n\r\n- Username - it is good practice to use short usernames\r\n- DNS server - Chroot will use its own resolver settings. You can use the default server settings or those from a provider.\r\n- Shell - Usually there is no reason to change this.\r\n- Extra binaries which will be installed under chroot. The binaries have to exists on the server.  Full path has to be provided and they have to be separated with a space.\r\n\r\nTo run, type: ./web-chroot-manager.sh wizard\r\n\r\n### 1.2 Wizard - Secondary Account\r\n\r\nThe account for the site administrator. Access is allowed via SFTP.  It inherits the GID of the primary account.  \r\nSince PHP is also run under the primary account you are free to deny access to the files by changing group permissions.\r\n\r\nThe wizard asks for:\r\n\r\n- Username - it is good practice to use short usernames\r\n- Username of parent (Primary Account) under which it will be created\r\n- Shell - Usually there is no reason to change this.\r\n- Email address - Required for other scripts, such as the WordPress Installer (LPI for Wordpress)\r\n\r\nThe Primary and Secondary account will be automatically added to primary and secondary groups, which are used \r\nfor SSH access policy enforcing. \r\n\r\nGroups are defined in /etc/buckhill-wcm/general.conf under PRIMARY_GROUP and SECONDARY_GROUP variables.\r\n\r\nGroups have to be setup on the server and the SSH server already configured, in order for the SSH access policy to work. \r\n\r\nYou may use the linux-package-installer (LPI) to configure the SSH server, if required.\r\n\r\nTo run, type: ./web-chroot-manager.sh wizard\r\n\r\n### 1.3 Wizard - Site\r\n\r\nThis generates a configuration for an Apache vhost which uses the PHP-FPM pool configured for the Primary account. \r\nThe wizard requires the Primary account username.\r\n\r\nThe wizard asks for:\r\n\r\n- Domain name\r\n- Primary account username\r\n- Listen socket (exp. 1.2.3.4:80) or leave * if you unsure\r\n- Vhost alias for the domain\r\n\r\nTo run, type: ./web-chroot-manager.sh wizard\r\n\r\n### 2. Create\r\n\r\nCreates a chroot account (Primary account), Secondary account and site\r\n\r\nThe configuration file for each action has to exist within /etc/buckhill-wcm/\r\n\r\n**Options:**\r\n\r\n- -u [account_name] - Create Primary or Secondary account together with chroot\r\n- -s [domain_name] - Creates site under chroot\r\n\r\nTo create chroot user, type: ./web-chroot-manager.sh create -u testuser\r\n\r\nTo create site under chroot user, type: ./web-chroot-manager.sh create -s testdomain.com\r\n\r\n### 3. Install Extra Binaries\r\n\r\nInstalls extra binaries into the chroot and updates the configuration file of the Primary account\r\n\r\n**Options (mandatory):**\r\n\r\n- -u [primary_account]\r\n- -p [binary list] separated by comma , full paths have to be provided\r\n\r\nTo run, type: ./web-chroot-manager.sh install -u testuser -p wget,ntp,nano \r\n\r\n### 4. Update Binaries\r\n\r\nUpdates binaries within a chroot.  The binary has to be specified in the Primary account configuration file\r\n\r\n**Options (mandatory):**\r\n\r\n- -u [primary_account]\r\n\r\nOptionally you may specify which binaries will be updated with -p flag\r\n\r\nIf the flag is not provided then all binaries from the configuration file will be updated\r\n\r\nTo update all binaries, type: ./web-chroot-manager.sh update -u testuser\r\n\r\nTo update specific binaries, type: ./web-chroot-manager.sh update -u testuser -p wget,ntp,nano\r\n\r\n### 5. Binary Blueprint Manager\r\n\r\nWith this function you can check your files against potentially unauthorised changes\r\n\r\nThe blueprint report provides a list of changed, missing, or new files\r\n\r\n**Options:**\r\n\r\n- -u [primary_account] **mandatory**\r\n- -g Generates blueprint\r\n- -c Compares current state with the previous blueprint. After the -c path another blueprint can be specified, otherwise latest blueprint is used\r\n- -f [blueprint_file] \r\n\r\nA file exclusion list can be defined within \"full_bp_exclusions\", which has to be saved into the configuration directory of the primary account.\r\n\r\nTo run, type: ./web-chroot-manager.sh blueprint -u testuser -g\r\n\r\nTo compare against previous state, type: ./web-chroot-manager.sh blueprint -u testuser -c\r\n\r\nTo compare against previous state, type: ./web-chroot-manager.sh blueprint -u testuser -c -f /path/to/blueprintfile\r\n\r\n### Directory structure and configuration files\r\n \r\n**Main configuration file:**\r\n\r\n/etc/buckhill-wcm/general.conf\r\n\r\n**Configuration file for the user generated with wizard:**\r\n\r\n/etc/buckhill-wcm/accounts/[Account Name]/user.conf\r\n\r\n**Binary blueprint exclusions list for the user:**\r\n\r\n/etc/buckhill-wcm/accounts/[Account Name]/full_bp_exclusions\r\n\r\nThe Linux Grep utility is used for matching patterns within this file, therefore the file format should be understandable to grep. For further informations check the grep documentation, specifically under \"option -f\"\r\n\r\n**Binary blueprint files for the user:**\r\n\r\n/etc/buckhill-wcm/accounts/[Username]/blueprints \r\n\r\n**Any binaries or file in this directory will be installed in chroot:**\r\n\r\n/etc/buckhill-wcm/accounts/[Account Name]/custom/\r\n\r\n**Website configuration:**\r\n\r\n/etc/buckhill-wcm/accounts/sites/domain_name.conf\r\n\r\n**Templates for php-fpm and Apache:**\r\n\r\n/etc/buckhill-wcm/apache_vhost_template.conf\r\n\r\n/etc/buckhill-wcm/apache_php-fpm.conf\r\n\r\n/etc/buckhill-wcm/fpm_pool_template.conf\r\n","google":"UA-46210494-2","note":"Don't delete this file! It's used internally to help with page regeneration."}